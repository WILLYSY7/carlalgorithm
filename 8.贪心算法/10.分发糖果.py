'''

涉及到的题目
leetcode 135

'''
'''
135. 分发糖果
n 个孩子站成一排。给你一个整数数组 ratings 表示每个孩子的评分。
你需要按照以下要求，给这些孩子分发糖果：
每个孩子至少分配到 1 个糖果。
相邻两个孩子评分更高的孩子会获得更多的糖果。
请你给每个孩子分发糖果，计算并返回需要准备的 最少糖果数目 。

示例 1：
输入：ratings = [1,0,2]
输出：5
解释：你可以分别给第一个、第二个、第三个孩子分发 2、1、2 颗糖果。

示例 2：
输入：ratings = [1,2,2]
输出：4
解释：你可以分别给第一个、第二个、第三个孩子分发 1、2、1 颗糖果。
     第三个孩子只得到 1 颗糖果，这满足题面中的两个条件。
'''
# 这道题难在对于同一个孩子分析，需要对左右两边来进行评比，最后确定每个孩子分得糖果的个数
# 如果一边判断左边一边判断右边，那么代码会非常复杂，而且有可能会有考虑不周到的地方
# 所以我们要一边一边地考虑，先全部考虑左边，再全部考虑右边，进行两次贪心
# 第一次，从前向后遍历，如果右边的孩子大于左边的孩子，右边孩子获得的糖为左边孩子的糖+1
# 第二次，从后向前遍历，如果左边孩子大于右边的孩子，并且左边孩子糖小于等于右边孩子糖，那么左边孩子糖等于右边孩子糖+1
# 两次贪心的结果就是
#   局部最优：右边>左边的孩子，糖果数量也是右边>左边
#           左边大于右边的孩子，糖果数量也是左边>右边
#   整体最优：相邻孩子中，评分最高的孩子获得的糖果最多
class Solution:
    def candy(self, ratings: List[int]) -> int:
        if len(ratings) == 1: return 1
        candy = [1]*len(ratings)
        left = 1
        right = len(candy)-2
        while left < len(candy):
            if ratings[left-1] < ratings[left]:
                candy[left] = candy[left-1] + 1
            left += 1
        while right >= 0:
            if ratings[right] > ratings[right+1] and candy[right] <= candy[right+1]:
                candy[right] = candy[right+1] + 1
            right -= 1
        return sum(candy)